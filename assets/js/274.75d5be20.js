(window.webpackJsonp=window.webpackJsonp||[]).push([[274],{470:function(e,t,n){"use strict";n.r(t);var a=n(0),r=Object(a.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[e._m(0),e._v(" "),n("p",[n("a",{attrs:{href:"https://travis-ci.org/leethomason/tinyxml2",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://travis-ci.org/leethomason/tinyxml2.svg?branch=master",alt:"TravisCI Status"}}),n("OutboundLink")],1),e._v(" "),n("a",{attrs:{href:"https://ci.appveyor.com/project/leethomason/tinyxml2",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://ci.appveyor.com/api/projects/status/github/leethomason/tinyxml2?branch=master&svg=true",alt:"AppVeyor Status"}}),n("OutboundLink")],1)]),e._v(" "),e._m(1),e._v(" "),n("p",[e._v("TinyXML-2 is a simple, small, efficient, C++ XML parser that can be\neasily integrated into other programs.")]),e._v(" "),n("p",[e._v("The master is hosted on github:\nhttps://github.com/leethomason/tinyxml2")]),e._v(" "),n("p",[e._v("The online HTML version of these docs:\nhttp://leethomason.github.io/tinyxml2/")]),e._v(" "),n("p",[e._v('Examples are in the "related pages" tab of the HTML docs.')]),e._v(" "),e._m(2),e._v(" "),n("p",[e._v("In brief, TinyXML-2 parses an XML document, and builds from that a\nDocument Object Model (DOM) that can be read, modified, and saved.")]),e._v(" "),n("p",[e._v('XML stands for "eXtensible Markup Language." It is a general purpose\nhuman and machine readable markup language to describe arbitrary data.\nAll those random file formats created to store application data can\nall be replaced with XML. One parser for everything.')]),e._v(" "),n("p",[e._v("http://en.wikipedia.org/wiki/XML")]),e._v(" "),n("p",[e._v("There are different ways to access and interact with XML data.\nTinyXML-2 uses a Document Object Model (DOM), meaning the XML data is parsed\ninto a C++ objects that can be browsed and manipulated, and then\nwritten to disk or another output stream. You can also construct an XML document\nfrom scratch with C++ objects and write this to disk or another output\nstream. You can even use TinyXML-2 to stream XML programmatically from\ncode without creating a document first.")]),e._v(" "),n("p",[e._v("TinyXML-2 is designed to be easy and fast to learn. It is one header and\none cpp file. Simply add these to your project and off you go.\nThere is an example file - xmltest.cpp - to get you started.")]),e._v(" "),n("p",[e._v("TinyXML-2 is released under the ZLib license,\nso you can use it in open source or commercial code. The details\nof the license are at the top of every source file.")]),e._v(" "),n("p",[e._v("TinyXML-2 attempts to be a flexible parser, but with truly correct and\ncompliant XML output. TinyXML-2 should compile on any reasonably C++\ncompliant system. It does not rely on exceptions, RTTI, or the STL.")]),e._v(" "),e._m(3),e._v(" "),n("p",[e._v("TinyXML-2 doesn't parse or use DTDs (Document Type Definitions) or XSLs\n(eXtensible Stylesheet Language.) There are other parsers out there\nthat are much more fully featured. But they are also much bigger,\ntake longer to set up in your project, have a higher learning curve,\nand often have a more restrictive license. If you are working with\nbrowsers or have more complete XML needs, TinyXML-2 is not the parser for you.")]),e._v(" "),e._m(4),e._v(" "),n("p",[e._v("TinyXML-2 is now the focus of all development, well tested, and your\nbest choice between the two APIs. At this point, unless you are maintaining\nlegacy code, you should choose TinyXML-2.")]),e._v(" "),n("p",[e._v("TinyXML-2 uses a similar API to TinyXML-1 and the same\nrich test cases. But the implementation of the parser is completely re-written\nto make it more appropriate for use in a game. It uses less memory, is faster,\nand uses far fewer memory allocations.")]),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),n("p",[e._v("TinyXML-2 uses UTF-8 exclusively when interpreting XML. All XML is assumed to\nbe UTF-8.")]),e._v(" "),n("p",[e._v("Filenames for loading / saving are passed unchanged to the underlying OS.")]),e._v(" "),e._m(8),e._v(" "),n("p",[e._v("An XMLDocument is a C++ object like any other, that can be on the stack, or\nnew'd and deleted on the heap.")]),e._v(" "),n("p",[e._v("However, any sub-node of the Document, XMLElement, XMLText, etc, can only\nbe created by calling the appropriate XMLDocument::NewElement, NewText, etc.\nmethod. Although you have pointers to these objects, they are still owned\nby the Document. When the Document is deleted, so are all the nodes it contains.")]),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),n("p",[e._v("Microsoft has an excellent article on white space: http://msdn.microsoft.com/en-us/library/ms256097.aspx")]),e._v(" "),n("p",[e._v("By default, TinyXML-2 preserves white space in a (hopefully) sane way that is almost compliant with the\nspec. (TinyXML-1 used a completely different model, much more similar to 'collapse', below.)")]),e._v(" "),n("p",[e._v("As a first step, all newlines / carriage-returns / line-feeds are normalized to a\nline-feed character, as required by the XML spec.")]),e._v(" "),n("p",[e._v("White space in text is preserved. For example:")]),e._v(" "),e._m(11),e._v(" "),n("p",[e._v('The leading space before the "Hello" and the double space after the comma are\npreserved. Line-feeds are preserved, as in this example:')]),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),n("p",[e._v('For some applications, it is preferable to collapse whitespace. Collapsing\nwhitespace gives you "HTML-like" behavior, which is sometimes more suitable\nfor hand typed documents.')]),e._v(" "),n("p",[e._v("TinyXML-2 supports this with the 'whitespace' parameter to the XMLDocument constructor.\n(The default is to preserve whitespace, as described above.)")]),e._v(" "),n("p",[e._v("However, you may also use COLLAPSE_WHITESPACE, which will:")]),e._v(" "),e._m(16),e._v(" "),n("p",[e._v("Note that (currently) there is a performance impact for using COLLAPSE_WHITESPACE.\nIt essentially causes the XML to be parsed twice.")]),e._v(" "),e._m(17),e._v(" "),n("p",[e._v("TinyXML-2 reports the line number of any errors in an XML document that\ncannot be parsed correctly. In addition, all nodes (elements, declarations,\ntext, comments etc.) and attributes have a line number recorded as they are parsed.\nThis allows an application that performs additional validation of the parsed\nXML document (e.g. application-implemented DTD validation) to report\nline number information for error messages.")]),e._v(" "),e._m(18),e._v(" "),n("p",[e._v('TinyXML-2 recognizes the pre-defined "character entities", meaning special\ncharacters. Namely:')]),e._v(" "),e._m(19),e._v(" "),n("p",[e._v("These are recognized when the XML document is read, and translated to their\nUTF-8 equivalents. For instance, text with the XML of:")]),e._v(" "),e._m(20),e._v(" "),n("p",[e._v('will have the Value() of "Far & Away" when queried from the XMLText object,\nand will be written back to the XML stream/file as an ampersand.')]),e._v(" "),e._m(21),e._v(" "),e._m(22),e._v(" "),e._m(23),e._v(" "),n("p",[e._v("You can directly use the convenience function:")]),e._v(" "),e._m(24),e._v(" "),n("p",[e._v("Or the XMLPrinter class:")]),e._v(" "),e._m(25),e._v(" "),e._m(26),e._v(" "),n("p",[e._v("Printing to memory is supported by the XMLPrinter.")]),e._v(" "),e._m(27),e._v(" "),e._m(28),e._v(" "),n("p",[e._v("When loading, an XML parser is very useful. However, sometimes\nwhen saving, it just gets in the way. The code is often set up\nfor streaming, and constructing the DOM is just overhead.")]),e._v(" "),n("p",[e._v("The Printer supports the streaming case. The following code\nprints out a trivially simple XML file without ever creating\nan XML document.")]),e._v(" "),e._m(29),e._v(" "),e._m(30),e._v(" "),e._m(31),e._v(" "),e._m(32),e._v(" "),e._m(33),e._v(" "),e._m(34),e._v(" "),e._m(35),e._v(" "),n("p",[e._v("There are 2 files in TinyXML-2:")]),e._v(" "),e._m(36),e._v(" "),n("p",[e._v("And additionally a test file:")]),e._v(" "),e._m(37),e._v(" "),n("p",[e._v("Simply compile and run. There is a visual studio 2017 project included, a simple Makefile,\nan Xcode project, a Code::Blocks project, and a cmake CMakeLists.txt included to help you.\nThe top of tinyxml.h even has a simple g++ command line if you are are Unix/Linuk/BSD and\ndon't want to use a build system.")]),e._v(" "),e._m(38),e._v(" "),n("p",[e._v("TinyXML-2 uses semantic versioning. http://semver.org/ Releases are now tagged in github.")]),e._v(" "),n("p",[e._v("Note that the major version will (probably) change fairly rapidly. API changes are fairly\ncommon.")]),e._v(" "),e._m(39),e._v(" "),n("p",[e._v("The documentation is build with Doxygen, using the 'dox'\nconfiguration file.")]),e._v(" "),e._m(40),e._v(" "),n("p",[e._v("TinyXML-2 is released under the zlib license:")]),e._v(" "),n("p",[e._v("This software is provided 'as-is', without any express or implied\nwarranty. In no event will the authors be held liable for any\ndamages arising from the use of this software.")]),e._v(" "),n("p",[e._v("Permission is granted to anyone to use this software for any\npurpose, including commercial applications, and to alter it and\nredistribute it freely, subject to the following restrictions:")]),e._v(" "),e._m(41),e._v(" "),e._m(42),e._v(" "),n("p",[e._v("Thanks very much to everyone who sends suggestions, bugs, ideas, and\nencouragement. It all helps, and makes this project fun.")]),e._v(" "),n("p",[e._v("The original TinyXML-1 has many contributors, who all deserve thanks\nin shaping what is a very successful library. Extra thanks to Yves\nBerquin and Andrew Ellerton who were key contributors.")]),e._v(" "),n("p",[e._v("TinyXML-2 grew from that effort. Lee Thomason is the original author\nof TinyXML-2 (and TinyXML-1) but TinyXML-2 has been and is being improved\nby many contributors.")]),e._v(" "),n("p",[e._v("Thanks to John Mackay at http://john.mackay.rosalilastudio.com for the TinyXML-2 logo!")])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"tinyxml-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tinyxml-2","aria-hidden":"true"}},[this._v("#")]),this._v(" TinyXML-2")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"http://www.grinninglizard.com/tinyxml2/TinyXML2_small.png",alt:"TinyXML-2 Logo"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"what-it-does"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-it-does","aria-hidden":"true"}},[this._v("#")]),this._v(" What it does.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"what-it-doesn-t-do"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-it-doesn-t-do","aria-hidden":"true"}},[this._v("#")]),this._v(" What it doesn't do.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"tinyxml-1-vs-tinyxml-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tinyxml-1-vs-tinyxml-2","aria-hidden":"true"}},[this._v("#")]),this._v(" TinyXML-1 vs. TinyXML-2")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("TinyXML-2 has no requirement or support for STL. By returning "),t("code",[this._v("const char*")]),this._v("\nTinyXML-2 can be much more efficient with memory usage. (TinyXML-1 did support\nand use STL, but consumed much more memory for the DOM representation.)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"features"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#features","aria-hidden":"true"}},[this._v("#")]),this._v(" Features")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"code-page"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#code-page","aria-hidden":"true"}},[this._v("#")]),this._v(" Code Page")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"memory-model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#memory-model","aria-hidden":"true"}},[this._v("#")]),this._v(" Memory Model")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"white-space"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#white-space","aria-hidden":"true"}},[this._v("#")]),this._v(" White Space")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"whitespace-preservation-default"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#whitespace-preservation-default","aria-hidden":"true"}},[this._v("#")]),this._v(" Whitespace Preservation (default)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("<element> Hello,  World</element>\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("<element> Hello again,\n          World</element>\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("However, white space between elements is "),t("strong",[this._v("not")]),this._v(" preserved. Although not strictly\ncompliant, tracking and reporting inter-element space is awkward, and not normally\nvaluable. TinyXML-2 sees these as the same XML:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("<document>\n\t<data>1</data>\n\t<data>2</data>\n\t<data>3</data>\n</document>\n\n<document><data>1</data><data>2</data><data>3</data></document>\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"whitespace-collapse"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#whitespace-collapse","aria-hidden":"true"}},[this._v("#")]),this._v(" Whitespace Collapse")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("Remove leading and trailing whitespace")]),this._v(" "),t("li",[this._v("Convert newlines and line-feeds into a space character")]),this._v(" "),t("li",[this._v("Collapse a run of any number of space characters into a single space character")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"error-reporting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#error-reporting","aria-hidden":"true"}},[this._v("#")]),this._v(" Error Reporting")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"entities"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#entities","aria-hidden":"true"}},[this._v("#")]),this._v(" Entities")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("&amp;\t&\n&lt;\t<\n&gt;\t>\n&quot;\t\"\n&apos;\t'\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("Far &amp; Away\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Additionally, any character can be specified by its Unicode code point:\nThe syntax "),t("code",[this._v("&#xA0;")]),this._v(" or "),t("code",[this._v("&#160;")]),this._v(" are both to the non-breaking space character.\nThis is called a 'numeric character reference'. Any numeric character reference\nthat isn't one of the special entities above, will be read, but written as a\nregular code point. The output is correct, but the entity syntax isn't preserved.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"printing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#printing","aria-hidden":"true"}},[this._v("#")]),this._v(" Printing")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"print-to-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#print-to-file","aria-hidden":"true"}},[this._v("#")]),this._v(" Print to file")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('XMLDocument doc;\n...\ndoc.SaveFile( "foo.xml" );\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("XMLPrinter printer( fp );\ndoc.Print( &printer );\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"print-to-memory"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#print-to-memory","aria-hidden":"true"}},[this._v("#")]),this._v(" Print to memory")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("XMLPrinter printer;\ndoc.Print( &printer );\n// printer.CStr() has a const char* to the XML\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"print-without-an-xmldocument"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#print-without-an-xmldocument","aria-hidden":"true"}},[this._v("#")]),this._v(" Print without an XMLDocument")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('XMLPrinter printer( fp );\nprinter.OpenElement( "foo" );\nprinter.PushAttribute( "foo", "bar" );\nprinter.CloseElement();\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[this._v("#")]),this._v(" Examples")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"load-and-parse-an-xml-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#load-and-parse-an-xml-file","aria-hidden":"true"}},[this._v("#")]),this._v(" Load and parse an XML file.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('/* ------ Example 1: Load and parse an XML file. ---- */\n{\n\tXMLDocument doc;\n\tdoc.LoadFile( "dream.xml" );\n}\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"lookup-information"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lookup-information","aria-hidden":"true"}},[this._v("#")]),this._v(" Lookup information.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('/* ------ Example 2: Lookup information. ---- */\n{\n\tXMLDocument doc;\n\tdoc.LoadFile( "dream.xml" );\n\n\t// Structure of the XML file:\n\t// - Element "PLAY"      the root Element, which is the\n\t//                       FirstChildElement of the Document\n\t// - - Element "TITLE"   child of the root PLAY Element\n\t// - - - Text            child of the TITLE Element\n\n\t// Navigate to the title, using the convenience function,\n\t// with a dangerous lack of error checking.\n\tconst char* title = doc.FirstChildElement( "PLAY" )->FirstChildElement( "TITLE" )->GetText();\n\tprintf( "Name of play (1): %s\\n", title );\n\n\t// Text is just another Node to TinyXML-2. The more\n\t// general way to get to the XMLText:\n\tXMLText* textNode = doc.FirstChildElement( "PLAY" )->FirstChildElement( "TITLE" )->FirstChild()->ToText();\n\ttitle = textNode->Value();\n\tprintf( "Name of play (2): %s\\n", title );\n}\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"using-and-installing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#using-and-installing","aria-hidden":"true"}},[this._v("#")]),this._v(" Using and Installing")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("tinyxml2.cpp")]),this._v(" "),t("li",[this._v("tinyxml2.h")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("xmltest.cpp")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"versioning"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#versioning","aria-hidden":"true"}},[this._v("#")]),this._v(" Versioning")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"documentation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#documentation","aria-hidden":"true"}},[this._v("#")]),this._v(" Documentation")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"license"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#license","aria-hidden":"true"}},[this._v("#")]),this._v(" License")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[this._v("The origin of this software must not be misrepresented; you must\nnot claim that you wrote the original software. If you use this\nsoftware in a product, an acknowledgment in the product documentation\nwould be appreciated but is not required.")]),this._v(" "),t("li",[this._v("Altered source versions must be plainly marked as such, and\nmust not be misrepresented as being the original software.")]),this._v(" "),t("li",[this._v("This notice may not be removed or altered from any source\ndistribution.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"contributors"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contributors","aria-hidden":"true"}},[this._v("#")]),this._v(" Contributors")])}],!1,null,null,null);r.options.__file="readme.md";t.default=r.exports}}]);