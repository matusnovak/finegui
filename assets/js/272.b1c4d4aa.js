(window.webpackJsonp=window.webpackJsonp||[]).push([[272],{468:function(t,n,e){"use strict";e.r(n);var a=e(0),s=Object(a.a)({},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),e("p",[t._v("NanoVG is small antialiased vector graphics rendering library for OpenGL. It has lean API modeled after HTML5 canvas API. It is aimed to be a practical and fun toolset for building scalable user interfaces and visualizations.")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),e("p",[t._v("The NanoVG API is modeled loosely on HTML5 canvas API. If you know canvas, you're up to speed with NanoVG in no time.")]),t._v(" "),t._m(4),t._v(" "),e("p",[t._v("The drawing context is created using platform specific constructor function. If you're using the OpenGL 2.0 back-end the context is created as follows:")]),t._v(" "),t._m(5),e("p",[t._v("The first parameter defines flags for creating the renderer.")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),e("p",[t._v("Drawing a simple shape using NanoVG consists of four steps: 1) begin a new shape, 2) define the path to draw, 3) set fill or stroke, 4) and finally fill or stroke the path.")]),t._v(" "),t._m(10),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),e("p",[t._v("The OpenGL back-end touches following states:")]),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/cmaughan/nanovg",target:"_blank",rel:"noopener noreferrer"}},[t._v("DX11 port"),e("OutboundLink")],1),t._v(" by "),e("a",{attrs:{href:"https://github.com/cmaughan",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chris Maughan"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/ollix/MetalNanoVG",target:"_blank",rel:"noopener noreferrer"}},[t._v("Metal port"),e("OutboundLink")],1),t._v(" by "),e("a",{attrs:{href:"https://github.com/olliwang",target:"_blank",rel:"noopener noreferrer"}},[t._v("Olli Wang"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/bkaradzic/bgfx/tree/master/examples/20-nanovg",target:"_blank",rel:"noopener noreferrer"}},[t._v("bgfx port"),e("OutboundLink")],1),t._v(" by "),e("a",{attrs:{href:"https://github.com/bkaradzic",target:"_blank",rel:"noopener noreferrer"}},[t._v("Branimir Karadžić"),e("OutboundLink")],1)])]),t._v(" "),t._m(24),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/vinjn/island/blob/master/examples/01-processing/sketch2d.h",target:"_blank",rel:"noopener noreferrer"}},[t._v("Processing API simulation by vinjn"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/sbarisic/nanovg_dotnet",target:"_blank",rel:"noopener noreferrer"}},[t._v("NanoVG for .NET, C# P/Invoke binding"),e("OutboundLink")],1)])]),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),e("p",[e("a",{attrs:{href:"https://groups.google.com/forum/#!forum/nanovg",target:"_blank",rel:"noopener noreferrer"}},[t._v("NanoVG mailing list"),e("OutboundLink")],1)]),t._v(" "),t._m(28),t._v(" "),e("p",[t._v("Uses "),e("a",{attrs:{href:"http://nothings.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("stb_truetype"),e("OutboundLink")],1),t._v(" (or, optionally, "),e("a",{attrs:{href:"http://freetype.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("freetype"),e("OutboundLink")],1),t._v(") for font rendering.\nUses "),e("a",{attrs:{href:"http://nothings.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("stb_image"),e("OutboundLink")],1),t._v(" for image loading.")])])},[function(){var t=this.$createElement,n=this._self._c||t;return n("h1",{attrs:{id:"nanovg"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nanovg","aria-hidden":"true"}},[this._v("#")]),this._v(" NanoVG")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"screenshot"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#screenshot","aria-hidden":"true"}},[this._v("#")]),this._v(" Screenshot")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[n("img",{attrs:{src:"/example/screenshot-01.png?raw=true",alt:"screenshot of some text rendered witht the sample program"}})])},function(){var t=this.$createElement,n=this._self._c||t;return n("h1",{attrs:{id:"usage"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#usage","aria-hidden":"true"}},[this._v("#")]),this._v(" Usage")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"creating-drawing-context"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#creating-drawing-context","aria-hidden":"true"}},[this._v("#")]),this._v(" Creating drawing context")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"language-C extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" NANOVG_GL2_IMPLEMENTATION\t")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use GL2 implementation.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nanovg_gl.h"')])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" NVGcontext"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" vg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nvgCreateGL2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NVG_ANTIALIAS "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NVG_STENCIL_STROKES"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,n=this._self._c||t;return n("ul",[n("li",[n("code",[this._v("NVG_ANTIALIAS")]),this._v(" means that the renderer adjusts the geometry to include anti-aliasing. If you're using MSAA, you can omit this flags.")]),this._v(" "),n("li",[n("code",[this._v("NVG_STENCIL_STROKES")]),this._v(" means that the render uses better quality rendering for (overlapping) strokes. The quality is mostly visible on wider strokes. If you want speed, you can omit this flag.")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Currently there is an OpenGL back-end for NanoVG: "),n("a",{attrs:{href:"/src/nanovg_gl.h"}},[this._v("nanovg_gl.h")]),this._v(" for OpenGL 2.0, OpenGL ES 2.0, OpenGL 3.2 core profile and OpenGL ES 3. The implementation can be chosen using a define as in above example. See the header file and examples for further info.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[n("em",[this._v("NOTE:")]),this._v(" The render target you're rendering to must have stencil buffer.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"drawing-shapes-with-nanovg"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#drawing-shapes-with-nanovg","aria-hidden":"true"}},[this._v("#")]),this._v(" Drawing shapes with NanoVG")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"language-C extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nvgBeginPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nvgRect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nvgFillColor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nvgRGBA")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("192")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nvgFill")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Calling "),n("code",[this._v("nvgBeginPath()")]),this._v(" will clear any existing paths and start drawing from blank slate. There are number of number of functions to define the path to draw, such as rectangle, rounded rectangle and ellipse, or you can use the common moveTo, lineTo, bezierTo and arcTo API to compose the paths step by step.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"understanding-composite-paths"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#understanding-composite-paths","aria-hidden":"true"}},[this._v("#")]),this._v(" Understanding Composite Paths")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Because of the way the rendering backend is build in NanoVG, drawing a composite path, that is path consisting from multiple paths defining holes and fills, is a bit more involved. NanoVG uses even-odd filling rule and by default the paths are wound in counter clockwise order. Keep that in mind when drawing using the low level draw API. In order to wind one of the predefined shapes as a hole, you should call "),n("code",[this._v("nvgPathWinding(vg, NVG_HOLE)")]),this._v(", or "),n("code",[this._v("nvgPathWinding(vg, NVG_CW)")]),this._v(" "),n("em",[this._v("after")]),this._v(" defining the path.")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"language-C extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nvgBeginPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nvgRect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nvgCircle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nvgPathWinding")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NVG_HOLE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Mark circle as a hole.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nvgFillColor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nvgRGBA")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("192")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nvgFill")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"rendering-is-wrong-what-to-do"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rendering-is-wrong-what-to-do","aria-hidden":"true"}},[this._v("#")]),this._v(" Rendering is wrong, what to do?")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ul",[e("li",[t._v("make sure you have created NanoVG context using one of the "),e("code",[t._v("nvgCreatexxx()")]),t._v(" calls")]),t._v(" "),e("li",[t._v("make sure you have initialised OpenGL with "),e("em",[t._v("stencil buffer")])]),t._v(" "),e("li",[t._v("make sure you have cleared stencil buffer")]),t._v(" "),e("li",[t._v("make sure all rendering calls happen between "),e("code",[t._v("nvgBeginFrame()")]),t._v(" and "),e("code",[t._v("nvgEndFrame()")])]),t._v(" "),e("li",[t._v("to enable more checks for OpenGL errors, add "),e("code",[t._v("NVG_DEBUG")]),t._v(" flag to "),e("code",[t._v("nvgCreatexxx()")])]),t._v(" "),e("li",[t._v("if the problem still persists, please report an issue!")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"opengl-state-touched-by-the-backend"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#opengl-state-touched-by-the-backend","aria-hidden":"true"}},[this._v("#")]),this._v(" OpenGL state touched by the backend")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("p",[t._v("When textures are uploaded or updated, the following pixel store is set to defaults: "),e("code",[t._v("GL_UNPACK_ALIGNMENT")]),t._v(", "),e("code",[t._v("GL_UNPACK_ROW_LENGTH")]),t._v(", "),e("code",[t._v("GL_UNPACK_SKIP_PIXELS")]),t._v(", "),e("code",[t._v("GL_UNPACK_SKIP_ROWS")]),t._v(". Texture binding is also affected. Texture updates can happen when the user loads images, or when new font glyphs are added. Glyphs are added as needed between calls to  "),e("code",[t._v("nvgBeginFrame()")]),t._v(" and "),e("code",[t._v("nvgEndFrame()")]),t._v(".")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("The data for the whole frame is buffered and flushed in "),n("code",[this._v("nvgEndFrame()")]),this._v(". The following code illustrates the OpenGL state touched by the rendering code:")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"language-C extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[t._v("\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glUseProgram")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prog"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glBlendFunc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GL_SRC_ALPHA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GL_ONE_MINUS_SRC_ALPHA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glEnable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GL_CULL_FACE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glCullFace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GL_BACK"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glFrontFace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GL_CCW"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glEnable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GL_BLEND"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glDisable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GL_DEPTH_TEST"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glDisable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GL_SCISSOR_TEST"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glColorMask")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GL_TRUE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GL_TRUE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GL_TRUE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GL_TRUE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glStencilMask")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xffffffff")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glStencilOp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GL_KEEP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GL_KEEP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GL_KEEP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glStencilFunc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GL_ALWAYS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xffffffff")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glActiveTexture")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GL_TEXTURE0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glBindBuffer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GL_UNIFORM_BUFFER"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glBindVertexArray")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glBindBuffer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GL_ARRAY_BUFFER"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glBindTexture")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GL_TEXTURE_2D"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("glUniformBlockBinding")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GLNVG_FRAG_BINDING"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"api-reference"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#api-reference","aria-hidden":"true"}},[this._v("#")]),this._v(" API Reference")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("See the header file "),n("a",{attrs:{href:"/src/nanovg.h"}},[this._v("nanovg.h")]),this._v(" for API reference.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"ports"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ports","aria-hidden":"true"}},[this._v("#")]),this._v(" Ports")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"projects-using-nanovg"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#projects-using-nanovg","aria-hidden":"true"}},[this._v("#")]),this._v(" Projects using NanoVG")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"license"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#license","aria-hidden":"true"}},[this._v("#")]),this._v(" License")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("The library is licensed under "),n("a",{attrs:{href:"LICENSE.txt"}},[this._v("zlib license")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"discussions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#discussions","aria-hidden":"true"}},[this._v("#")]),this._v(" Discussions")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"links"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#links","aria-hidden":"true"}},[this._v("#")]),this._v(" Links")])}],!1,null,null,null);s.options.__file="README.md";n.default=s.exports}}]);